# Node.js React Web App to Linux on Azure
# Build a Node.js React app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: "b3bd7b6a-6344-4a1a-b66d-9967c2c17d9b"

  # Web app name
  webAppName: "stocking-up"

  # Environment name
  environmentName: "stocking-up"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - task: Npm@1
            inputs:
              command: 'install'
              workingDir: 'server'
          - task: ArchiveFiles@2
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)"
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: drop

  - stage: Test
    displayName: Test stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: Test
        displayName: Test
        pool:
          vmImage: $(vmImageName)

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "14.17.6"
            displayName: "Install Node.js"

          - script: |
              cd server && npm install && npm run test:ci
            displayName: "npm install and output test results"

          - task: PublishTestResults@2
            displayName: "supply npm test results to pipelines"
            condition: succeededOrFailed()
            inputs:
              testResultsFiles: "server/junit.xml"

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Test
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(environmentName)
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  displayName: "Azure App Service Deploy: stocking-up"
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appType: webAppLinux
                    WebAppName: $(webAppName)
                    packageForLinux: "$(Pipeline.Workspace)/drop/$(Build.BuildId).zip"
                    RuntimeStack: "NODE|14-lts"
                    RemoveAdditionalFilesFlag: true
                    StartupCommand: "npm run start"
                    ScriptType: "Inline Script"
                    InlineScript: |
                      npm run build
                      cd server && npm install